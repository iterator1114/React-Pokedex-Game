{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","isWinner","Pokemon","map","p","base_experience","Pokegame","hand1","hand2","pokemon","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAuBeA,E,4JAfX,WACI,IAJUC,EAIJC,EAAM,UANH,8DAMG,QAJFD,EAI8BE,KAAKC,MAAMC,KAJnB,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAIpD,QACZ,OACI,sBAAMM,UAAU,WAAhB,UACI,oBAAIA,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMI,OAC3C,qBAAKD,UAAU,eAAf,SACI,qBAAKE,IAAKP,EAAQQ,IAAKP,KAAKC,MAAMI,SAEtC,sBAAKD,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,QACjD,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GAVzCC,aCYRC,G,kKAfX,WACI,OACI,sBAAKP,UAAU,UAAf,UACI,mBAAGA,UAAWJ,KAAKC,MAAMW,SAAW,iBAAmB,gBAAvD,SAAyEZ,KAAKC,MAAMW,SAAW,gBAAkB,iBACjH,oBAAGR,UAAU,cAAb,+BAA8CJ,KAAKC,MAAMQ,IAAzD,OACA,qBAAKL,UAAU,gBAAf,SACKJ,KAAKC,MAAMY,QAAQC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAAUb,GAAIa,EAAEb,GAAIG,KAAMU,EAAEV,KAAMG,KAAMO,EAAEP,KAAMC,IAAKM,EAAEC,8B,GARzDN,cCDhBO,E,4JAaF,WAGI,IAFA,IAAIC,EAAQ,GACRC,EAAK,YAAOnB,KAAKC,MAAMmB,SACpBF,EAAMG,OAASF,EAAME,QAAQ,CAChC,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWN,EAAME,QAC3CK,EAAcP,EAAMQ,OAAOL,EAAS,GAAG,GAC3CJ,EAAMU,KAAKF,GAGf,IAAIG,EAAOX,EAAMY,QAAO,SAACrB,EAAKW,GAAN,OAAkBX,EAAMW,EAAQJ,kBAAiB,GACrEe,EAAOZ,EAAMW,QAAO,SAACrB,EAAKW,GAAN,OAAkBX,EAAMW,EAAQJ,kBAAiB,GAEzE,OACI,gCACI,cAAC,EAAD,CAASH,QAASK,EAAOT,IAAKoB,EAAMjB,SAAUiB,EAAOE,IACrD,cAAC,EAAD,CAASlB,QAASM,EAAOV,IAAKsB,EAAMnB,SAAUiB,EAAOE,W,GA5B9CrB,aAAjBO,EACKe,aAAe,CAClBZ,QAAS,CACL,CAAElB,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQQ,gBAAiB,IAC5D,CAAEd,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASQ,gBAAiB,IAC3D,CAAEd,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOQ,gBAAiB,IACzD,CAAEd,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUQ,gBAAiB,KAC/D,CAAEd,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYQ,gBAAiB,KAC9D,CAAEd,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUQ,gBAAiB,IAC/D,CAAEd,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUQ,gBAAiB,KAC3D,CAAEd,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUQ,gBAAiB,MAwBxDC,QC1BAgB,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACG,cAAC,EAAD,OCOQ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b42cef7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Pokecard.css'\r\n// const POKE_API = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/';\r\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\n\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\r\n\r\nclass Pokecard extends Component {\r\n    render() {\r\n        const imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\r\n        return (\r\n            < div className='Pokecard' >\r\n                <h2 className='Pokecard-title'>{this.props.name}</h2>\r\n                <div className='Pokecard-img'>\r\n                    <img src={imgSrc} alt={this.props.name} />\r\n                </div>\r\n                <div className='Pokecard-text'>Type: {this.props.type}</div>\r\n                <div className='Pokecard-text'>Exp: {this.props.exp}</div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokecard;","import React, { Component } from 'react';\r\nimport Pokecard from './Pokecard';\r\nimport './Pokedex.css';\r\nclass Pokedex extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Pokedex'>\r\n                <p className={this.props.isWinner ? 'Pokedex-winner' : 'Pokedex-loser'}>{this.props.isWinner ? 'Winning hand!' : 'Losing hand!'}</p>\r\n                <p className='Pokedex-exp'>Total Experience: {this.props.exp} </p>\r\n                <div className='Pokedex-cards'>\r\n                    {this.props.Pokemon.map((p) => (\r\n                        <Pokecard id={p.id} name={p.name} type={p.type} exp={p.base_experience} />\r\n                    ))}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from 'react'\r\nimport Pokedex from './Pokedex';\r\nclass Pokegame extends Component {\r\n    static defaultProps = {\r\n        pokemon: [\r\n            { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n            { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n            { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n            { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n            { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n            { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n            { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n            { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\r\n        ]\r\n    };\r\n    render() {\r\n        let hand1 = [];\r\n        let hand2 = [...this.props.pokemon];\r\n        while (hand1.length < hand2.length) {\r\n            let randIdx = Math.floor(Math.random() * hand2.length);\r\n            let randPokemon = hand2.splice(randIdx, 1)[0];\r\n            hand1.push(randPokemon);\r\n        }\r\n\r\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n        let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n\r\n        return (\r\n            <div>\r\n                <Pokedex Pokemon={hand1} exp={exp1} isWinner={exp1 < exp2} />\r\n                <Pokedex Pokemon={hand2} exp={exp2} isWinner={exp1 > exp2} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokegame;","import './App.css';\nimport Pokegame from './Pokegame';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {<Pokegame />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}